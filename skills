11.08.2017

ПРОЕКТЫ

1) Ribatsuga
На этом проекте выполнил самое большое количество тасков, ознакомился с большей частью модулей, которые использовал, они описаны ниже.
Также  поработал с шаблонами писем, делал html файл для русской локали. Одним из первых тасков была проблема с шаблоном письма, которое приходит на почту при создании заказа и инвойса. Оно содержало логотип Магенты вместо логотипа сайта. Исправил.
Также у них была проблема с работой выборки акционных товаров на странице акций. Там неправильно был сгенерирован SQL запрос через коллекции. На этом таске на практике столкнулся с формированием запроса для выборки значений из EAV сущностей. Исправил.
Также была проблема с гугл аналитикой у них. Исправил.
Поработал с кронами. Поскольку у них список акционных товаров формировался по крону раз в сутки - то я разобрался с ним и тестировал проект используя крон, запуская его вручную намного чаще через командную строку.
Последние их таски были связаны с неправильным использованием кастомных модулей ихними разработчиками - об этом будет подробнее ниже.
Также было очень много тасков, выполнение которых заключалось в правке css стилей и редактирования Javascript скриптов, так как многое у них там неправильно работало просто по причине фронтенда. (сбивались отступы, не до конца скроллилось окно при разворачивании и тд.)

2) Nottefatata
Работа с оптимизацией сайта, ставил модули, которые будут описаны ниже. Также на этом проекте поработал с настройками .htaccess на живом сайте.

3) Mysa
Было несколько тасков по данному проекту. Заключались они во внесении изменений на страницу чекаута - не работала английская локаль. Здесь на практике ознакомился с мультисторрингом Магенты, так как через него была внедрена поддержка многих языков на сайте.  

4) Web4pro_Fastorder
Изначально я тестировал данный проект и выявлял баги, потом его разработку переаттачили на меня и я его доделал. Описывать изменения долго, очень подробно они описаны в истории моих редмайн - коммитов.  
При работе с данным проектом я хорошо ознакомился с типами товаров и тем, как они создаются, чем отличаются друг от друга конфигурируемые, групповые и бандл товары, с формированием специальных групповых и ступенчатых цен на товары, с их поведением на фронте. также реализовал нужное их поведение при активации нашего модуля fastorder.





5) Web4pro_Googlemerchants
Занимался пересборкой этого модуля. у одного из клиентов, использующего его, возник конфликт с модулем, поскольку при сборке через админку была указана версия пхп до 5.6.0. Поскольку версий пхп 5.6 существует несколько, то последние версии "шестой пыхи" не входят в ограничение 5.6.0, нужно было пересобрать модуль, указав версию 6.0.0. Теперь модуль не конфликтует с проектами на Магенте, которые используют последние версии пхп из серии 5.6....
На примере этого таска я научился использовать  Magento Connect Manager и Package Extensions.

6) Warmyourflow
На этом проекте я установил модуль FraudLabsPro. Этот модуль, насколько я понял, нужен для защиты от указания неверных данных клиентом. Установил его, протестировал результаты. Результаты на мой взгляд  были не очень логичными, учитывая предназначение модуля, но клиенту все понравилось, таски выполнены.

7) Ehex
На данный момент это новый для меня проект, его я задиплоил локально.

8) Lana Mueller
На данный момент это новый для меня проект, его я задиплоил локально.

----------------------------------------------------------------------------------------------

МОДУЛИ


основные кастомные модули, с которыми приходилось иметь дело на момент 11.08.2017:

1 )Amasty (Расширяет фильтрацию, добавляет возможность вносить кастомные тайтлы дескрипшeны и ключевые слова.)

2) Mirasvit Seo (с помощью него разработчики прикрепили модуль Amasty к модулю Goodwin)

3) Goodwin (модуль, созданный специально для проекта "Рыбацюга")

В проекте "Рыбацюга" были обьединены модули Amasty, Mirasvit Seo и Goodwin. В связи с неправильным использованием модуля Amasty другими разработчиками - одним из тасков было исправление неправильно формировавшихся значений title, description, key words. Ознакомился с функционалом этих модулей в процессе работы над таском. В кратце, суть оказалась в том, что в качестве блока с именем head использовался не коровский блок Mage_Core_Block_Html_Head, а соответствующий блок модуля Mirasvit. В этом модуле обьекты категорий и продуктов содержали поле _category, которое было обьектом класса из модуля Goodwin. А он в свою очередь взаимодействовал с модулем Amasty и брал оттуда функционал переопределения title, description, keywords и возвращал в head для Amasty.


4) Google Analitycs (позволяет использовать гугл аналитику и яндекс метрику на страницах сайта)
С  работой данного модуля также ознакомился на проекте "Рыбацюга". Проблемма была в том, что у них вставлялся скрипт с гугл аналитикой со старым кодом, а новый не вставлялся. Было это потому что они поставили в соответствие блоку шаблон, который подключал пхп скрипт, содержащий статическую строку как раз таки ненужного устаревшего кода аналитики. Делали они это давно, когда тот код был еще актуален. А когда потребовался новый - то забыли, что оставили свой "костыль" и пытались править файл, который вообще не задействовался, так как был заменен на подключение файла со статической строкой.


5) Potato Optimizer
Данный модуль оптимизирует сайт, делая мерджинг JS CSS файлов, а также оптимизацию картинок. Временные файлы он хранит в отдельных директориях внутри папки media, так же как и родной мерджинг, встроенный в возможности самой Магенты. Этот модуль я ставил на проект Nottefatata.


6) FraudLabsPro
Модуль нужен для защиты от указания неверных данных клиентом.

----------------------------------------------------------------------------------------------

Оптимизация сайта:

1) Gzip Compressing
Это технология оптимизации работы сайта путем сжатия содержимого возвращаемой сервером страницы. Имел дело с компрессором на проекте Nottefatata - на живом сервере правил их .htaccess, внося туда опции mod_deflate. Суть работы компрессора заключается в том, что браузер при отправки данных на сервер отправляет среди прочих заголовков Accept-Encoding: gzip, deflate. Этот заголовок сообщает браузеру, что ответ нужно отдать в формате index.html.zip вместо обычной страницы index.html. Также в теле ответа сервера будет заголовок Content-Encoding: gzip, который сообщит браузеру, что ответ получает в виде архива.

2) Кэширование браузера
Вся суть сводится к тому, чтобы заставить браузер загрузить редкоизменяемые данные с сервера в локальный кэш один раз, а при последующих заходах на сайт использовать данные из кэша.
Нужно на сервере включить модули mod_expires и mod_headers, перезагрузить сервер и добавить в .htaccess строчки для кэширования.
Кеширование браузера использовал для оптимизации сайта Nottefatata.



3) Мердж CSS и JS файлов
Суть сводится к тому, чтобы убрать лишние символы переноса строк, пробелы и табуляции с файлов CSS и JS и слить их в единые временные CSS JS файлы.
Проблемность этого метода оптимизации заключается в том, что многие JS файлы написаны без ; в конце операторов. Синтаксис джаваскрипт позволяет опускать точку с запятой, если на той же строке нет больше инструкций. При мердже JS файлов они там оказываются, так как символы переноса строки убираются. С этим и приходилось разбираться при мердже файлов для проекта Nottefatata. Так же попутно исправлял другие JS ошибки, которые не приводили к видимой поломке сайта и потому в таск не входили.
мердж CSS и JS файлов в магенде делается через админку. временные файлы  хранятся не в папках skin и js, а в отдельных директориях внутри папки media.

4) Разобрался с индексированием базы данных. Это тоже значительно повышает скорость работы сайта.
Индекс в БД — это копия таблицы без данных, но отсортированная по определенным правилам, где каждая ячейка — есть ссылка на родительскую ячейку в основной таблице.
На проекте индексацию использовать не пришлось, так как клиент остался доволен установкой модуля с разрешением всех его конфликтов с проектом, чем я и занимался.

----------------------------------------------------------------------------------------------


Прочая, возможно не указанная в проектах и модулях информация, но с которой разобрался:

1) Индексация. Для чего нужны, как применяются, обновляются индексы.
2) Пользователи и группы пользователей.
3) Налоги в Магенте. Как формируются налоги, как они привязываются к товарам и клиентам через клиентские группы
4) Ценовые правила для продуктов и каталогов в Магенто
5) Работа с кроном, настраивал свой крон для своей операционной системы, который запускает каждую минуту скрипт, создающий новый файл, если такового еще нет
6) Ознакомился с менеджером ЧПУ в Магенто
7) Для чего нужны Inventory Stock options, Inventory Product Stock Options

Также сюда можно перечислить многие новые ньюансы, которые я узнал о структуре самой Магенты с точки зрения ее кода (реврайт обсерверов, контроллеров, определение своих роутеров, из внедрение, указание родительских тем в иных темах, что стало возможным только начиная с версии 1.9..., порядок загрузки csv файлов для тем, в общем еще много чего, что для себя узнал, ковыряясь в коде Магенты, но применять не приходилось)













cat /proc/cpuinfo - информация о процессорах системы
ctrl + D - возможно выходит из режима набора в консоли Ubuntu

sudo dpkg --configure -a - дебажит багнутый процесс установки

pkexec chmod 440 /etc/sudoers.d/README
pkexec chmod 755 /etc/sudoers.d

systemctl status apache2.service

sudo su - меняет пользователя на root
если стоит $ в командной строке Linux - то мы под обычным пользователем. 
если стоит # в командной строке Linux - то мы под root

sudo vipw - выводит список пользователей 
sudo users - показывает текущего пользователя

git status - статус на данный момент
git log - выводит историю коммитов
git log -p - в логе коммитов будут указаны изменения
git clean -d -f -удаляет все untracked файлы и директории
git branch -d name Удаляет ветку name
git checkout -b name создает и прыгает на ветку name
git merge name сливает текущую ветку с веткой name
  - Например на ветке b1 команда git merge b2: Если на b1 есть сознанные непроиндексированные файлы или созданные индексирвоанные файлы, которых нет на b2 - то придется их или закоммитить или удалить.   Если закоммитить - то мердж будет и после мерджа придется разрешить конфликт. И будет дерево логов с ветки b2, потом наш лог, потом лог мерджа. 

структура мерджа:
<<<<<<< HEAD
То что в текущей ветке
=======
То что в ветке, с которой мерджим
>>>>>>> код последнего коммита ветки, с которой мерджим 
Например:
<<<<<<< HEAD
LLLLLLLLLLLLLLLLL
=======
444444444444444444444
>>>>>>> b272fdbddb198ebf474260252d0097c4a47c6f19

git branch name создает ветку name
git branch name origin/master1 создает ветку name и загружает в нее ветку master1 по ссылке origin
git remote Чтобы просмотреть, какие удалённые серверы уже настроены
git remote -v Чтобы посмотреть, какому URL соответствует сокращённое имя в Git
git remote rename name1 name2 переименовует ссылку
git remote rm name удаляет ссылку
git remote rm origin удаляет ссылку на репозиторий
git remote add origin https://github.com/supremacy91/testnext.git - добавляет удаленный сервер
git diff  непроиндексированные изменения относительно последней индексации или коммита
git diff --cached проиндексированные изменения оттносительно последнего коммита
git commit --amend заменяет последний коммит
git checkout <имя файла>/. отменяет не проинедксированные изменения в файле/во всех файлах, но толкьо в том случае, если файлы находятся под версионным контролем (не untracked)
git reset 
git reset --soft HEAD^ убирает последний коммит оставляя изменения
git reset --hard HEAD^ убирает последний коммит вместе с изменениями
   -Если мы делаем git reset --hard HEAD^ или git reset --soft HEAD^ и в иерархии гитлога встречается мердж веток, то при команде резета будет прыжок до той ветки, от которой шли изменения, вызвавшие мердж. 
git reset HEAD - откатывет индекс к предыдущему или а untracked если такового ранее не было
git checkout -- name - отменяет удаление проиндексированного файла

git rm name удаляет файл с директоии. 
- Если файл входит в текущий коммит, то это тоже самое, что и прсото физическое удаление файла с последующей командой git add(удаляет файл, н оне удаляет гит-индекс этог офайла. Посе этой команды будет зеленым светиться удаленный файл как deleted)
-Если файл был изменен и проиндексирован, то эта команда сработает только с спецификатором -f и удалит файл физически и с индекса и добавит команду git add, что в результате приведет к "чистоте" - файла не будет видно физически, ни в deleted ни в untracked)

git rm --cached name удаляет файл с индекса 
-Если файл входит в текущий коммит, то он будет светиться зеленым как deleted, а также как untracked - поскольку физически останется.
-Если файл был изменен и проиндексирован, то эта команда просто уберет его с индекса, отправив в untracked

git push origin master - заливает в репозиторий
git revert .....

в PHPSTORM: пкм(где угодно в открытом проекте) -> Git -> Resolve Conflicts...

which phpstorm(или другйо исполняемый файл) - выдает полный путь к Шторму или другомй исполняемому файлу

sudo rm -R -d name -удаляет рекурсивно директорию с файлами
sudo rm -R -d name/* -удаляет рекурсивно файлы с директории

rm file - удалить файл
rm -R dir - удалить каталог
rm -r dir/* - удаляет всe рекурсивно из папки dir
rm -df dir/* - удаляет всe пустые папки b файлы из папки dir 
rm -d dir/* - удаляет всe пустые папки b файлы из папки dir 

cat file1 > file2 - копирует содержимое первого файла во второй. Если второго файла нет создает его.
cat > file2 - редактирует файл, запрашивая ввод содержимого с клавиатуры. Вводим содержимое и нажимаем Ctrl+D/Ctrl+C. Если файла нет - создает его

cp file1 file2 копирует содержимое первого файла во второй. Если второго файла нет создает его.

http://www.linuxcenter.ru/lib/books/kostromin/gl_04_06.phtml - крутой гайд по командам

Ключ -v покажет "комментарий", т.е. выведет на экран подтверждение действий 
например: rm -vR dir - удалить каталог 
---------------------------------------------------------------------------------------------------------------------

mv file newfile - меняет имя файла file на newfile
mkdir ~/My_directory_name - создаст директорию My_directory_name в каталоге home
mkdir /My_directory_name - создаст директорию My_directory_name в каталоге Computer

создание файлов
touch "filename" -------создать пустой файл
cat > "filename" --------и ввод закончить ctrl+z
vim "filename" --------создать или редактировать "filename" 
nano filename
echo "текст" > filename

wget - закачивает файлы с сайта по его адресу. Если сайт на https - то тоже закачиввает 

---------------------------------------------------------------------------------------------------------------------

При работе с vim:

    :q - quit if no changes were made
    :q! - quit and destroy any changes made
    :wq - write changes (save) and quit
    :x - similar to :wq, only write the file if changes were made, then quit

предварительно нажать esc перед вводом команд

---------------------------------------------------------------------------------------------------------------------

Roger Shah and Signum – Healesville Sanctuary
